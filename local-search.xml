<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>HTML+CSS3实现魔卡少女樱风格网站【效果展示】</title>
    <link href="/2024/04/02/HTML-CSS3%E5%AE%9E%E7%8E%B0%E9%AD%94%E5%8D%A1%E5%B0%91%E5%A5%B3%E6%A8%B1%E9%A3%8E%E6%A0%BC%E7%BD%91%E7%AB%99%E3%80%90%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA%E3%80%91/"/>
    <url>/2024/04/02/HTML-CSS3%E5%AE%9E%E7%8E%B0%E9%AD%94%E5%8D%A1%E5%B0%91%E5%A5%B3%E6%A8%B1%E9%A3%8E%E6%A0%BC%E7%BD%91%E7%AB%99%E3%80%90%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>源码请移步我的<a href="https://github.com/Monmuen/Web3-Cardcaptor-Sakura-Fanmade-Website">Github</a>，此处仅作效果展示。</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>主体风格模仿<a href="https://ccsakura-official.com/">CARDCAPTORSAKURA OFFICIAL WEB SITE</a>。</p><h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h2><p>请点击<a href="https://www.bilibili.com/video/BV1Hz421Z7Pf/?spm_id_from=333.999.0.0">此链接</a>移步bilibili观看。</p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python实现视频转彩色字符动画</title>
    <link href="/2024/03/13/python%E5%AE%9E%E7%8E%B0%E8%A7%86%E9%A2%91%E8%BD%AC%E5%BD%A9%E8%89%B2%E5%AD%97%E7%AC%A6%E5%8A%A8%E7%94%BB/"/>
    <url>/2024/03/13/python%E5%AE%9E%E7%8E%B0%E8%A7%86%E9%A2%91%E8%BD%AC%E5%BD%A9%E8%89%B2%E5%AD%97%E7%AC%A6%E5%8A%A8%E7%94%BB/</url>
    
    <content type="html"><![CDATA[<p>大一时做的实训项目。今年重新运行时发现由于PIL库更新，getsize()函数已无法使用。故重新修改了一下发上来。</p><p><a href="https://github.com/Monmuen/python-image-converts-to-ascii-art">代码请点击这里下载</a></p><p>代码中的注释已经写的很详尽。</p><h2 id="如何实现彩色字符动画"><a href="#如何实现彩色字符动画" class="headerlink" title="如何实现彩色字符动画"></a>如何实现彩色字符动画</h2><p>原本做的是彩色视频转彩色字符动画，但实际生成图片的效率很低，耗时很长，这里主要讲一下思路：</p><ol><li>将视频提取每一帧</li><li>将每一帧转换为字符画</li><li>将字符画拼接成视频</li></ol><p>你需要下载ffmpeg插件，opencv，os和subprocess库。</p><h2 id="代码参考"><a href="#代码参考" class="headerlink" title="代码参考"></a>代码参考</h2><p>将视频逐帧输出图片到文件夹A之后，输入文件夹A的路径，对图片进行转换处理，将处理后的图片存到文件夹B中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">path = input(&quot;请输入路径(例如D:\\picture)：&quot;)</span><br><span class="line">filelist = os.listdir(path)</span><br><span class="line">for files in filelist:#循环处理文件夹中所有文件</span><br><span class="line">    Oldimg = os.path.join(path, files)#把图片的名字也组合上</span><br><span class="line">    if os.path.isdir(Oldimg):</span><br><span class="line">        continue</span><br><span class="line">    ascii_art(Oldimg)</span><br></pre></td></tr></table></figure><p>将转换好的图片封装成视频。这里的路径换成你自己的，前面的路径是文件夹B，后面的路径是你希望存储封装后视频的路径。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cmd2=&#x27;ffmpeg -f image2 -framerate 30 -i D:\\Pshixun\\out\\%d.jpg.png D:\\Pshixun\\outvideo.mp4&#x27;</span><br><span class="line">sp.call(cmd2,shell=True)</span><br></pre></td></tr></table></figure><p>为视频添加音频，并播放。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cmd3=&#x27;ffmpeg -i D:\\Pshixun\\outvideo.mp4 -c:v copy -an D:\\Pshixun\\NO_AUDIO.mp4&#x27;</span><br><span class="line">sp.call(cmd3,shell=True)</span><br><span class="line">cmd4=&#x27;ffmpeg -i D:\\Pshixun\\NO_AUDIO.mp4 -i D:\\Pshixun\\V.aac -c copy D:\\Pshixun\\WITHAUDIO.mp4&#x27;</span><br><span class="line">sp.call(cmd4,shell=True)</span><br><span class="line">cap = cv2.VideoCapture(&#x27;WITHAUDIO.mp4&#x27;)</span><br><span class="line">while cap.isOpened():</span><br><span class="line">  ret, frame = cap.read()</span><br><span class="line"># 如果正确读取帧，ret为True</span><br><span class="line">  cv2.namedWindow(&quot;frame&quot;,0)</span><br><span class="line">  cv2.resizeWindow(&quot;frame&quot;,500,1100)</span><br><span class="line">  if not ret:</span><br><span class="line">    print(&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;)</span><br><span class="line">    break</span><br><span class="line">  color = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)</span><br><span class="line">  cv2.imshow(&#x27;frame&#x27;, color)</span><br><span class="line">  if cv2.waitKey(1) == ord(&#x27;q&#x27;):</span><br><span class="line">    break</span><br><span class="line">cap.release()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p>（<a href="https://www.bilibili.com/video/BV1AD42177fh/?spm_id_from=333.999.list.card_archive.click&vd_source=fbff32e18e3711ff31de80f501c1fa9e">*演示视频请看</a>）如果代码运行不成功，欢迎找我讨论。（虽然只有GitHub和bilibili的联系方式啦）</p>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo d博客时遇到css和js文件报错的问题</title>
    <link href="/2024/03/13/hexo-d%E5%8D%9A%E5%AE%A2%E6%97%B6%E9%81%87%E5%88%B0css%E5%92%8Cjs%E6%96%87%E4%BB%B6%E6%8A%A5%E9%94%99%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2024/03/13/hexo-d%E5%8D%9A%E5%AE%A2%E6%97%B6%E9%81%87%E5%88%B0css%E5%92%8Cjs%E6%96%87%E4%BB%B6%E6%8A%A5%E9%94%99%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>  如题，搭建博客时本地预览正常，在将博客发布到Github Pages时界面显示不正常。通过在网页中右键选择检查，发现是css和js文件无法正常导入。</p><h2 id="解决办法1-原作者"><a href="#解决办法1-原作者" class="headerlink" title="解决办法1(原作者)"></a>解决办法1(<a href="https://blog.ctftools.com/2022/06/newpost-44/">原作者</a>)</h2><ol><li>在博客source目录下创建assets&#x2F;static文件夹，将<a href="https://github.com/dr34-m/hexo/tree/master/source/assets/static">此链接</a>下的内容全部拷贝到assets&#x2F;static文件夹中。</li><li>将_config.fluid.yml文件中的static_prefix部分改成如下这样：</li></ol><pre><code> static_prefix:  # 内部静态  # Internal static  internal_js: /js  internal_css: /css  internal_img: /img  anchor: /assets/static/  github_markdown: /assets/static/  jquery: /assets/static/  bootstrap: /assets/static/  prismjs: /assets/static/  tocbot: /assets/static/  typed: /assets/static/  fancybox: /assets/static/  nprogress: /assets/static/  mathjax: /assets/static/  katex: /assets/static/  busuanzi: /assets/static/  clipboard: /assets/static/  mermaid: /assets/static/  valine: /assets/static/  waline: /assets/static/  gitalk: /assets/static/  disqusjs: /assets/static/  twikoo: /assets/static/  discuss: /assets/static/  hint: /assets/static/  moment: /assets/static/</code></pre><h2 id="解决办法2-原出处"><a href="#解决办法2-原出处" class="headerlink" title="解决办法2(原出处)"></a>解决办法2(<a href="https://github.com/iissnan/hexo-theme-next/issues/1220">原出处</a>)</h2><ul><li>在博客的source目录里加入.nojekyll文件，然后更改Hexo的_config.yml加入以下配置：</li></ul>  <img src="/2024/03/13/hexo-d%E5%8D%9A%E5%AE%A2%E6%97%B6%E9%81%87%E5%88%B0css%E5%92%8Cjs%E6%96%87%E4%BB%B6%E6%8A%A5%E9%94%99%E7%9A%84%E9%97%AE%E9%A2%98/img2.png" class="">  <ul><li>还不行的话在.deploy_git里加入.nojekyll文件。</li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>问题解决</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
